name: Docker Multi-Arch Image CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Prepare
      id: prep
      run: |
          DOCKER_IMAGE_QUAY=quay.io/${GITHUB_REPOSITORY_OWNER#*/}/${GITHUB_REPOSITORY#*/}
          DOCKER_IMAGE_DOCKERHUB=docker.io/${GITHUB_REPOSITORY_OWNER#*/}/${GITHUB_REPOSITORY#*/}
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS_QUAY="${DOCKER_IMAGE_QUAY}:${VERSION},${DOCKER_IMAGE_QUAY}:${SHORTREF},${DOCKER_IMAGE_QUAY}:latest"
          TAGS_DOCKERHUB="${DOCKER_IMAGE_DOCKERHUB}:${VERSION},${DOCKER_IMAGE_DOCKERHUB}:${SHORTREF},${DOCKER_IMAGE_DOCKERHUB}:latest"

          TAGS="${TAGS_QUAY},${TAGS_DOCKERHUB}"

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          
    - name: Set up QEMU
      uses: docker/setup-qemu-action@master
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Login to Quay
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.prep.outputs.tags }}

